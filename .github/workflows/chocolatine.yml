name: Chocolatine
on: [push, pull_request]
env:
    MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-COT-2-2-chocolatine-jessica.moussougan.git"
    EXECUTABLES: "101pong"
jobs:
    check_coding_style:
        name: check_coding_style
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest
        steps:
            - uses: actions/checkout@v4
            - run: |
                check.sh $(pwd) $(pwd)
                if [ -f $coding-style-reports.log ]; then 
                    cat coding-style-reports.log;
                else
                    echo "No file"
                fi
    check_program_compilation:
        name: check_program_compilation
        needs: check_coding_style
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        steps:
            - name: checkout-repository
              uses: actions/checkout@v4
            - name: compile-program
              run: make
            - name: check-if-binary-exists-and-is-executable
              run:
                if [ -s ${{ env.EXECUTABLES }}] && [-x ${{ env.EXECUTABLES }}]; then
                    echo "Yes binary exists and it's executable"
                else
                    echo "Binary doesn't exist or exists and isn't executable"
                fi
            - name: cleaning-repository
              run: make clean
    run_tests:
        name: run_tests
        needs: check_program_compilation
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        steps:
            - name: checkout-repository
              uses: actions/checkout@v4
            - name: making-tests-run
              run: make tests_run
    push_to_mirror:
        name: push_to_mirror
        needs: run_tests
        runs-on: ubuntu-latest
        if: ${{ github.event_name }} == "push" 
        steps:
          - name: checkout-repository
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
          - name:
            uses: pixta-dev/repository-mirroring-action@v1
            with:
              target_repo_url: ${{ env.MIRROR_URL }}
              ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
